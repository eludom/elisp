#+OPTIONS: ':nil *:t -:t ::t <:t H:3 \n:nil ^:nil arch:headline
#+OPTIONS: author:t broken-links:nil c:nil creator:nil
#+OPTIONS: d:(not "LOGBOOK") date:t e:t email:nil f:t inline:t num:2
#+OPTIONS: p:nil pri:nil prop:nil stat:t tags:t tasks:t tex:t
#+OPTIONS: timestamp:t title:t toc:t todo:t |:t
#+TITLE: gmj-org-hacks
#+DATE: <2016-07-30 15:45:08 Saturday>
#+AUTHOR: George M Jones
#+EMAIL: gmj@pobox.com
#+LANGUAGE: en
#+SELECT_TAGS: export
#+EXCLUDE_TAGS: noexport
#+CREATOR: Emacs 25.1.50.1 (Org mode 8.3.4)

* What
  George Jones' collection of org-mode hacks.
* Why  
  - My org mode hacks are getting spread out and disorganized.
  - Needed to put them somewhere consistent.
* Who
  - George Jones <gmj@PBX.com

* When  

* Where  

* How  
** Utility functions
   #+begin_src emacs-lisp
   (defun getCurrentLine () 
      "Get current line without newline.

       http://ergoemacs.org/emacs/elisp_thing-at-point_problems.html"
      (interactive)
      (buffer-substring-no-properties (line-beginning-position) (line-end-position)))
   #+end_src

   #+RESULTS:
   : getCurrentLine


** gmj org mode function definitions
*** gmj-org-demote
**** code
 #+begin_src emacs-lisp
 (defun gmj-org-demote (howManyTimes)
   "demote current and next /howManyTimes/ -1 org mode elements.

   TODO List
     - Operate on region
     - Need error handling on (org-forward-element) with negagive counts.
      Starting on '**** a' below with a negative 2 count returns an error

      * one
      ***** a
      ***** b
      * c
      * two
   "
  
   (interactive "p")
   (let ((count 0))
     (while (< count (abs howManyTimes))
       (progn
	 (if (< howManyTimes 0)
	     (org-promote-subtree)
	   (org-demote-subtree))
         (message "org-forward-element")
	 (org-forward-element)
         (message "incr count")
	 (setq count (+ count 1))))))

 #+end_src
**** To Do List
***** DONE set up a key binding.
*** gmj-org-example
**** code
#+BEGIN_SRC emacs-lisp
;(defun current-line-empty-p ()
;  (save-excursion
;    (beginning-of-line)
;    (looking-at "[[:space:]]*$")))

(defun current-line-empty-p ()
  (string-match-p "^\\s-*$" (getCurrentLine)))

(defun gmj-org-example-region (start end)
  "Insert a markup <b></b> around a region."
  (interactive "r")
  (save-excursion
    (goto-char end)
    (if (not (current-line-empty-p))
      (progn
        (end-of-line)
        (newline)))
    (insert "#+end_example")

    (goto-char start)
    (if (not (current-line-empty-p)) 
     (progn
        (beginning-of-line)
        (insert "#+begin_example")
        (newline))
      (insert "#+begin_example"))
   )
)
#+END_SRC

#+RESULTS:
: gmj-org-example-region
WW**** To Do List
***** TODO - insert \n explicitly, not in quotes
***** TODO - Do auto-indentation 
***** TODO - Deal with null region

      
* gmj-org-mode-config hook
  - Guidance on key binding ::
       http://ergoemacs.org/emacs/emacs_keybinding_overview.html
  #+begin_example
Emacs Keys Overview

By Xah Lee. Date: 2012-03-22. Last updated: 2015-04-09.
Emacs keys are often confusing to beginners. Here's a summary.

• 【Alt+x】 is to call a command by name.

• 【Ctrl+letter】 is for frequently used editing commands. ➢ for example: cursor movement, Paste C-y, mark C-SPC, Cancel C-g, Search C-s, ….

• 【Alt+letter】 is for somewhat less frequently used operations, often complement to Ctrl. ➢ for example: move by words {M-f, M-b}, Copy M-w, comment-dwim M-;, ….

• 【Ctrl+x …】 is for commands that are useful globally. ➢ for example: dired C-x d, switch-to-buffer C-x b, string-rectangle C-x r t, bookmark-bmenu-list C-x r l, ….

• 【Ctrl+c …】 is for major-mode specific commands. ➢ for example: in org-mode, org-time-stamp C-c . inserts date.

• 【Ctrl+h …】 or 【F1 …】 is for help or getting info. ➢ for example: describe-function C-h f, apropos-command C-h a, info C-h i.

• 【Ctrl+Alt+key】 is for lisp coding related commands. ➢ for example: backward-sexp <C-M-left>. (Tutorial: How to Edit Lisp Code with Emacs.)

Note 【Alt+x】 is technically 【Meta+x】, ususually written as M-x. “Meta” is a physical key on lisp machine keyboards. If you are in a text terminal, and no Meta remapping has been setup, you can type 【Meta+x】 by pressing 【Esc x】.
  #+end_example
  - How to define keys specific to major modes :: http://ergoemacs.org/emacs/emacs_set_keys_for_major_mode.html
#+BEGIN_SRC emacs-lisp
(defun gmj-org-mode-config ()
  "For use in `org-mode-hook'."
  (message "Runing gmj-org-mode-cofig")
  (local-set-key (kbd "C-c d") 'gmj-org-demote)
  (local-set-key (kbd "C-c e") 'gmj-org-example-region)
  ;(local-set-key (kbd "C-c C-p") nil) ; example of remove a key
  ;; more here
  )

;; add to hook
(add-hook 'org-mode-hook 'gmj-org-mode-config)
#+END_SRC

#+RESULTS:
| gmj-org-mode-config | my-org-mode-config | (lambda nil (local-set-key \357 (quote org-mime-org-buffer-htmlize))) | (closure (org-inlinetask-min-level buffer-face-mode-face org-mode-map org-tbl-menu org-org-menu org-struct-menu org-entities org-last-state org-id-track-globally org-clock-start-time texmathp-why remember-data-file org-agenda-tags-todo-honor-ignore-options iswitchb-temp-buflist calc-embedded-open-mode calc-embedded-open-formula calc-embedded-close-formula align-mode-rules-list org-emphasis-alist org-emphasis-regexp-components org-export-registered-backends org-modules org-babel-load-languages t) nil (add-hook (quote change-major-mode-hook) (quote org-show-block-all) (quote append) (quote local))) | (closure (org-bracket-link-regexp org-src-window-setup *this* org-babel-confirm-evaluate-answer-no org-src-preserve-indentation org-src-lang-modes org-edit-src-content-indentation org-babel-library-of-babel t) nil (add-hook (quote change-major-mode-hook) (quote org-babel-show-result-all) (quote append) (quote local))) | org-babel-result-hide-spec | org-babel-hide-all-hashes |

 
